{
	"name": "hari_dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "HariTopSellingBrand",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          image_url as string,",
				"          image_url_suffix as string,",
				"          imageUrls as string,",
				"          product_url as string,",
				"          color as string,",
				"          size as string,",
				"          width as string,",
				"          brand_name as string,",
				"          brand_name_en as string,",
				"          brand_logo as string,",
				"          model_name as string,",
				"          prices as string,",
				"          is_tbyb as string,",
				"          tags as string,",
				"          color_options as string,",
				"          totalColorAvailable as string,",
				"          is_ditto as string,",
				"          classification as string,",
				"          specifications as string,",
				"          wishlistCount as string,",
				"          purchaseCount as string,",
				"          avgRating as string,",
				"          totalNoOfRatings as string,",
				"          hashtagList as string,",
				"          offerName as string,",
				"          cmsLinkAndroid as string,",
				"          cmsLinkIos as string,",
				"          arModelAndroidUrl as string,",
				"          arModelIOSUrl as string,",
				"          arModelMsiteAndDesktopUrl as string,",
				"          arModelOriginalUrl as string,",
				"          qty as string,",
				"          frameColorImage as string,",
				"          subCollection as string,",
				"          subCollectionId as string,",
				"          relatedItems as string,",
				"          isCygnusEnabled as string,",
				"          isCashbackApplicable as string,",
				"          searchProductName as string,",
				"          prescriptionType as string,",
				"          {Market Price} as string,",
				"          {Lenskart Price} as string,",
				"          frame_size_id as string,",
				"          frame_shape_id as string,",
				"          brandname_id as string,",
				"          frametype_id as string,",
				"          productName as string,",
				"          {Model No.} as string,",
				"          {Frame Size} as string,",
				"          {Frame Width} as string,",
				"          {Frame Dimensions} as string,",
				"          {Frame colour} as string,",
				"          Weight as string,",
				"          {Weight Group} as string,",
				"          Material as string,",
				"          {Frame Material} as string,",
				"          {Temple Material} as string,",
				"          {Prescription Type} as string,",
				"          {Frame Style} as string,",
				"          {Frame Style Secondary} as string,",
				"          Collection as string,",
				"          {Product Warranty} as string,",
				"          Gender as string,",
				"          Height as string,",
				"          Condition as string,",
				"          {Temple Colour} as string,",
				"          occasion as string,",
				"          suited_for as string,",
				"          inclusiveText as string,",
				"          {Frame Dimensions With Height} as string,",
				"          {Suited For} as string,",
				"          {Glass Color} as string,",
				"          Video as string,",
				"          {Lens Technology} as string,",
				"          Power as string,",
				"          {And (For showing Attributes on Front End)} as string,",
				"          {Lens Material} as string,",
				"          clUsage as string,",
				"          {Base Curve} as string,",
				"          Diameter as string,",
				"          Packaging as string,",
				"          {Usage Duration} as string,",
				"          {Water Content} as string,",
				"          Expiry as string,",
				"          {Contact Lens Solution Quantity} as string,",
				"          tryOnImageUrl as string,",
				"          offer_image as string,",
				"          isCombo as string,",
				"          comboImageUrl as string,",
				"          comboDescription as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 select(mapColumn(",
				"          id,",
				"          brand_name,",
				"          purchaseCount",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 aggregate(groupBy(brand_name),",
				"     purchaseCount = sum(toInteger(purchaseCount))) ~> aggregate1",
				"aggregate1 sort(desc(purchaseCount, true)) ~> sort1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}