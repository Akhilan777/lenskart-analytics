{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText4",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText4",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText4",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText4",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText4",
						"type": "DatasetReference"
					},
					"name": "sink4"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText4",
						"type": "DatasetReference"
					},
					"name": "sink5"
				}
			],
			"transformations": [
				{
					"name": "topBrands"
				},
				{
					"name": "rank1"
				},
				{
					"name": "topFrames"
				},
				{
					"name": "mostLovedColor"
				},
				{
					"name": "topSizeSell"
				},
				{
					"name": "likedBrands"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          color as string,",
				"          size as string,",
				"          width as string,",
				"          brand_name as string,",
				"          model_name as string,",
				"          tags as string,",
				"          classification as string,",
				"          wishlistCount as integer,",
				"          purchaseCount1 as integer,",
				"          avgRating as double,",
				"          totalNoOfRatings as string,",
				"          offerName as string,",
				"          qty as short,",
				"          subCollection as string,",
				"          subCollectionId as string,",
				"          searchProductName as string,",
				"          productname1 as string,",
				"          fullname as string,",
				"          sellerlabel as string,",
				"          productmodelname as string,",
				"          frametype as string,",
				"          productrating as string,",
				"          purchasecount as string,",
				"          wishlistcount1 as string,",
				"          productquantity1 as string,",
				"          type1 as string,",
				"          offertext1 as string,",
				"          brandname1 as string,",
				"          subcategories1 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 aggregate(groupBy(brand_name),",
				"     AveragePurchase = ceil(avg(purchaseCount1))) ~> topBrands",
				"topBrands rank(desc(AveragePurchase, true),",
				"     output(top_seller as long)) ~> rank1",
				"source1 aggregate(groupBy(frametype),",
				"     purchaseCount1 = ceil(avg(purchaseCount1))) ~> topFrames",
				"source1 aggregate(groupBy(color),",
				"     purchaseCount1 = ceil(avg(purchaseCount1))) ~> mostLovedColor",
				"source1 aggregate(groupBy(size),",
				"     productname1 = ceil(avg(purchaseCount1))) ~> topSizeSell",
				"source1 aggregate(groupBy(brand_name),",
				"     avgRating = avg(avgRating)) ~> likedBrands",
				"topFrames sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1",
				"rank1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2",
				"mostLovedColor sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink3",
				"topSizeSell sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink4",
				"likedBrands sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink5"
			]
		}
	}
}