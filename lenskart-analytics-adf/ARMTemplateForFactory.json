{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "lenskart-analytics-adf"
		},
		"AzureBlobStorageLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorageLinkedService'"
		},
		"AzureSqlDatabaseLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabaseLinkedService'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/RSNM_pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RSNM_Dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "RSNM_dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/RSNM_dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RSNM_pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RSNM_Dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "RSNM_dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/RSNM_dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customer_dimension_id_and_pincode_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Customer Id and Pincode Dimension Table",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "customer_dimension_id_and_pincode_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"customersSource": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/customer_dimension_id_and_pincode_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestion_pipeline_akhilan')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy customers data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "customer_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customer_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "first_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "first_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "last_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "last_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "phone_number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "phone_number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "address",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "customers_blob_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azure_sql_customers_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy transaction data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy customers data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "transaction_blob_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azure_sql_transactions_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy eyeglasses data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy transaction data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "image_url",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "image_url",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "image_url_suffix",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "image_url_suffix",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "imageUrls",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "imageUrls",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "product_url",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_url",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "color",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "color",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "size",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "size",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "width",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "width",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "brand_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "brand_name_en",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand_name_en",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "brand_logo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand_logo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "model_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "model_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "prices",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "prices",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "is_tbyb",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_tbyb",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tags",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tags",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "color_options",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "color_options",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "totalColorAvailable",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "totalColorAvailable",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "is_ditto",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_ditto",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "classification",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "classification",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "specifications",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "specifications",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "wishlistCount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "wishlistCount",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "purchaseCount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "purchaseCount",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "avgRating",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgRating",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "totalNoOfRatings",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "totalNoOfRatings",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "hashtagList",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hashtagList",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "offerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "offerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "cmsLinkAndroid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cmsLinkAndroid",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "cmsLinkIos",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cmsLinkIos",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "arModelAndroidUrl",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "arModelAndroidUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "arModelIOSUrl",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "arModelIOSUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "arModelMsiteAndDesktopUrl",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "arModelMsiteAndDesktopUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "arModelOriginalUrl",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "arModelOriginalUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "qty",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qty",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "frameColorImage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "frameColorImage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "subCollection",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "subCollection",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "subCollectionId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "subCollectionId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "relatedItems",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "relatedItems",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "isCygnusEnabled",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "isCygnusEnabled",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "isCashbackApplicable",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "isCashbackApplicable",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "searchProductName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "searchProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "prescriptionType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "prescriptionType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Market Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Market Price",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Lenskart Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Lenskart Price",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "frame_size_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "frame_size_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "frame_shape_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "frame_shape_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "brandname_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brandname_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "frametype_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "frametype_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "productName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "productName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Model No.",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model No.",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Frame Size",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Frame Size",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Frame Width",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Frame Width",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Frame Dimensions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Frame Dimensions",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Frame colour",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Frame colour",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Weight",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Weight Group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Weight Group",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Material",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Material",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Frame Material",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Frame Material",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Temple Material",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Temple Material",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Prescription Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Prescription Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Frame Style",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Frame Style",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Frame Style Secondary",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Frame Style Secondary",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Collection",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Collection",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Product Warranty",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Product Warranty",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Height",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Height",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Condition",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Condition",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Temple Colour",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Temple Colour",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "occasion",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "occasion",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "suited_for",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "suited_for",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "inclusiveText",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "inclusiveText",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Frame Dimensions With Height",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Frame Dimensions With Height",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Suited For",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Suited For",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Glass Color",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Glass Color",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Video",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Video",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Lens Technology",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Lens Technology",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Power",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Power",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "And (For showing Attributes on Front End)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "And (For showing Attributes on Front End)",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Lens Material",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Lens Material",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "clUsage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "clUsage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Base Curve",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Base Curve",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Diameter",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diameter",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Packaging",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Packaging",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Usage Duration",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Usage Duration",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Water Content",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Water Content",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Expiry",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Expiry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Contact Lens Solution Quantity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact Lens Solution Quantity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tryOnImageUrl",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tryOnImageUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "offer_image",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "offer_image",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "isCombo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "isCombo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "comboImageUrl",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "comboImageUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "comboDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "comboDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "eyeglasses_blob_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azure_sql_eyeglasses_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/customers_blob_dataset')]",
				"[concat(variables('factoryId'), '/datasets/azure_sql_customers_table')]",
				"[concat(variables('factoryId'), '/datasets/transaction_blob_dataset')]",
				"[concat(variables('factoryId'), '/datasets/azure_sql_transactions_table')]",
				"[concat(variables('factoryId'), '/datasets/eyeglasses_blob_csv')]",
				"[concat(variables('factoryId'), '/datasets/azure_sql_eyeglasses_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/metric_orders_per_pincode_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Metric orders per pincode Data Flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "metric_orders_per_pincode_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CustomerDimensionSource": {},
									"transactionsSource": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/metric_orders_per_pincode_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/metric_products_sold_each_month_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Products sold per month data flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "products_sold_each_month_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"transactionsSource": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/products_sold_each_month_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/transaction_dimension_custId_and_pincode_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "transaction dimension Data flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "transaction_dimension_custId_and_pincode_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"transactionsSource": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/transaction_dimension_custId_and_pincode_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/yash_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {},
									"sink2": {},
									"sink3": {},
									"sink4": {},
									"sink5": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "raw",
					"table": "sunglasses"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "raw",
					"table": "yash"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "classic_sunglass_bestsellers_updated.csv",
						"container": "lenskart-analytics"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "color",
						"type": "String"
					},
					{
						"name": "occasion",
						"type": "String"
					},
					{
						"name": "size",
						"type": "String"
					},
					{
						"name": "width",
						"type": "String"
					},
					{
						"name": "brand_name",
						"type": "String"
					},
					{
						"name": "model_name",
						"type": "String"
					},
					{
						"name": "prices",
						"type": "String"
					},
					{
						"name": "tags",
						"type": "String"
					},
					{
						"name": "classification",
						"type": "String"
					},
					{
						"name": "wishlistCount",
						"type": "String"
					},
					{
						"name": "purchaseCount",
						"type": "String"
					},
					{
						"name": "avgRating",
						"type": "String"
					},
					{
						"name": "totalNoOfRatings",
						"type": "String"
					},
					{
						"name": "offerName",
						"type": "String"
					},
					{
						"name": "qty",
						"type": "String"
					},
					{
						"name": "subCollection",
						"type": "String"
					},
					{
						"name": "subCollectionId",
						"type": "String"
					},
					{
						"name": "isCashbackApplicable",
						"type": "String"
					},
					{
						"name": "searchProductName",
						"type": "String"
					},
					{
						"name": "productname1",
						"type": "String"
					},
					{
						"name": "fullname1",
						"type": "String"
					},
					{
						"name": "framedetails1",
						"type": "String"
					},
					{
						"name": "sellerlabel1",
						"type": "String"
					},
					{
						"name": "productmodelname",
						"type": "String"
					},
					{
						"name": "frametype1",
						"type": "String"
					},
					{
						"name": "productrating1",
						"type": "String"
					},
					{
						"name": "showpurchasecount1",
						"type": "String"
					},
					{
						"name": "purchasecount1",
						"type": "String"
					},
					{
						"name": "showwishlistcount1",
						"type": "String"
					},
					{
						"name": "wishlistcount1",
						"type": "String"
					},
					{
						"name": "productquantity1",
						"type": "String"
					},
					{
						"name": "iscoloroptionextra",
						"type": "String"
					},
					{
						"name": "type1",
						"type": "String"
					},
					{
						"name": "price1",
						"type": "String"
					},
					{
						"name": "coloroptions",
						"type": "String"
					},
					{
						"name": "offertext1",
						"type": "String"
					},
					{
						"name": "brandname1",
						"type": "String"
					},
					{
						"name": "generalproductinfo",
						"type": "String"
					},
					{
						"name": "technicalproductinfo",
						"type": "String"
					},
					{
						"name": "reviews",
						"type": "String"
					},
					{
						"name": "specifications1",
						"type": "String"
					},
					{
						"name": "richcontent",
						"type": "String"
					},
					{
						"name": "istryonenabled",
						"type": "String"
					},
					{
						"name": "totalnoofratings1",
						"type": "String"
					},
					{
						"name": "offerdetails1",
						"type": "String"
					},
					{
						"name": "subcategories1",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "classic_sunglass_bestsellers_updated.csv",
						"container": "lenskart-analytics"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RSNM_Table2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "RSNM",
					"table": "RSNM_Table2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RSNM_Transaction_Metric')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "RSNM",
					"table": "RSNM_Transaction_Metric"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_sql_customer_dimension_table_akhilan')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "akhilan_transformation",
					"table": "customer_dimension_id_and_pincode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_sql_customers_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "raw",
					"table": "customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_sql_eyeglasses_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "raw",
					"table": "eyeglasses"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_sql_fact_metric_products_sold_per_month_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "akhilan_transformation",
					"table": "products_sold_per_month"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_sql_fact_table_metric_products_sold_per_pincode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "akhilan_transformation",
					"table": "fact_metric_orders_per_pincode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_sql_transactions_dimension_id_and_pincode_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "akhilan_transformation",
					"table": "transactions_dimension_id_and_pincode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_sql_transactions_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "raw",
					"table": "transactions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customers_blob_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "customers.csv",
						"container": "lenskart-analytics"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/eyeglasses_blob_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "eyeglasses.csv",
						"container": "lenskart-analytics"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/transaction_blob_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "transactions (2).csv",
						"container": "lenskart-analytics"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabaseLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RSNM_dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "azure_sql_transactions_table",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "RSNM_Transaction_Metric",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customer_id as string,",
						"          product_id as string,",
						"          quantity as integer,",
						"          transaction_date as string,",
						"          transaction_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 aggregate(groupBy(customer_id),",
						"     No_Of_Transactions = count(transaction_id),",
						"          Total_Quantity = sum(quantity)) ~> aggregate1",
						"aggregate1 sort(desc(Total_Quantity, false)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azure_sql_transactions_table')]",
				"[concat(variables('factoryId'), '/datasets/RSNM_Transaction_Metric')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RSNM_dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "azure_sql_transactions_table",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "RSNM_Table2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customer_id as string,",
						"          product_id as string,",
						"          quantity as integer,",
						"          transaction_date as string,",
						"          transaction_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 aggregate(groupBy(product_id),",
						"     No_Of_Customers = count(customer_id),",
						"          Total_quantity_bought = sum(quantity)) ~> aggregate1",
						"aggregate1 sort(desc(Total_quantity_bought, false)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azure_sql_transactions_table')]",
				"[concat(variables('factoryId'), '/datasets/RSNM_Table2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customer_dimension_id_and_pincode_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "azure_sql_customers_table",
								"type": "DatasetReference"
							},
							"name": "customersSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "azure_sql_customer_dimension_table_akhilan",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivePinCode"
						},
						{
							"name": "selectCustIdandPincode"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customer_id as string,",
						"          first_name as string,",
						"          last_name as string,",
						"          email as string,",
						"          phone_number as string,",
						"          address as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> customersSource",
						"customersSource derive(pincode = substring(address, length(address) - 5, 6)) ~> derivePinCode",
						"derivePinCode select(mapColumn(",
						"          customer_id,",
						"          pincode",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectCustIdandPincode",
						"selectCustIdandPincode sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azure_sql_customers_table')]",
				"[concat(variables('factoryId'), '/datasets/azure_sql_customer_dimension_table_akhilan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "sink3"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "sink4"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "sink5"
						}
					],
					"transformations": [
						{
							"name": "topBrands"
						},
						{
							"name": "rank1"
						},
						{
							"name": "topFrames"
						},
						{
							"name": "mostLovedColor"
						},
						{
							"name": "topSizeSell"
						},
						{
							"name": "likedBrands"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id as integer,",
						"          color as string,",
						"          size as string,",
						"          width as string,",
						"          brand_name as string,",
						"          model_name as string,",
						"          tags as string,",
						"          classification as string,",
						"          wishlistCount as integer,",
						"          purchaseCount1 as integer,",
						"          avgRating as double,",
						"          totalNoOfRatings as string,",
						"          offerName as string,",
						"          qty as short,",
						"          subCollection as string,",
						"          subCollectionId as string,",
						"          searchProductName as string,",
						"          productname1 as string,",
						"          fullname as string,",
						"          sellerlabel as string,",
						"          productmodelname as string,",
						"          frametype as string,",
						"          productrating as string,",
						"          purchasecount as string,",
						"          wishlistcount1 as string,",
						"          productquantity1 as string,",
						"          type1 as string,",
						"          offertext1 as string,",
						"          brandname1 as string,",
						"          subcategories1 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 aggregate(groupBy(brand_name),",
						"     AveragePurchase = ceil(avg(purchaseCount1))) ~> topBrands",
						"topBrands rank(desc(AveragePurchase, true),",
						"     output(top_seller as long)) ~> rank1",
						"source1 aggregate(groupBy(frametype),",
						"     purchaseCount1 = ceil(avg(purchaseCount1))) ~> topFrames",
						"source1 aggregate(groupBy(color),",
						"     purchaseCount1 = ceil(avg(purchaseCount1))) ~> mostLovedColor",
						"source1 aggregate(groupBy(size),",
						"     productname1 = ceil(avg(purchaseCount1))) ~> topSizeSell",
						"source1 aggregate(groupBy(brand_name),",
						"     avgRating = avg(avgRating)) ~> likedBrands",
						"topFrames sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1",
						"rank1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2",
						"mostLovedColor sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink3",
						"topSizeSell sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink4",
						"likedBrands sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink5"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/metric_orders_per_pincode_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "azure_sql_customer_dimension_table_akhilan",
								"type": "DatasetReference"
							},
							"name": "CustomerDimensionSource"
						},
						{
							"dataset": {
								"referenceName": "azure_sql_transactions_dimension_id_and_pincode_table",
								"type": "DatasetReference"
							},
							"name": "transactionsSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "azure_sql_fact_table_metric_products_sold_per_pincode",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customer_id as string,",
						"          pincode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> CustomerDimensionSource",
						"source(output(",
						"          customer_id as string,",
						"          quantity as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> transactionsSource",
						"transactionsSource, CustomerDimensionSource join(transactionsSource@customer_id == CustomerDimensionSource@customer_id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 aggregate(groupBy(pincode),",
						"     quantity = sum(quantity)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azure_sql_customer_dimension_table_akhilan')]",
				"[concat(variables('factoryId'), '/datasets/azure_sql_transactions_dimension_id_and_pincode_table')]",
				"[concat(variables('factoryId'), '/datasets/azure_sql_fact_table_metric_products_sold_per_pincode')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/products_sold_each_month_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "azure_sql_transactions_table",
								"type": "DatasetReference"
							},
							"name": "transactionsSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "azure_sql_fact_metric_products_sold_per_month_table",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "cast1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customer_id as string,",
						"          product_id as string,",
						"          quantity as string,",
						"          transaction_date as string,",
						"          transaction_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> transactionsSource",
						"transactionsSource derive(transaction_my = substring(transaction_date, 1, 7)) ~> derivedColumn1",
						"derivedColumn1 cast(output(",
						"          quantity as integer",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 aggregate(groupBy(transaction_my),",
						"     quantity = sum(quantity)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azure_sql_transactions_table')]",
				"[concat(variables('factoryId'), '/datasets/azure_sql_fact_metric_products_sold_per_month_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/transaction_dimension_custId_and_pincode_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "azure_sql_transactions_table",
								"type": "DatasetReference"
							},
							"name": "transactionsSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "azure_sql_transactions_dimension_id_and_pincode_table",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customer_id as string,",
						"          product_id as string,",
						"          quantity as string,",
						"          transaction_date as string,",
						"          transaction_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> transactionsSource",
						"transactionsSource select(mapColumn(",
						"          customer_id,",
						"          quantity",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 cast(output(",
						"          quantity as integer",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azure_sql_transactions_table')]",
				"[concat(variables('factoryId'), '/datasets/azure_sql_transactions_dimension_id_and_pincode_table')]"
			]
		}
	]
}